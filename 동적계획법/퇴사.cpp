//14501 퇴사

/* 문제
1일에 잡혀있는 상담은 총 3일이 걸리며, 상담했을 때 받을 수 있는 금액은 10이다. 5일에 잡혀있는 상담은 총 2일이 걸리며, 받을 수 있는 금액은 15이다.
상담을 하는데 필요한 기간은 1일보다 클 수 있기 때문에, 모든 상담을 할 수는 없다. 예를 들어서 1일에 상담을 하게 되면, 2일, 3일에 있는 상담은 할 수 없게 된다. 
2일에 있는 상담을 하게 되면, 3, 4, 5, 6일에 잡혀있는 상담은 할 수 없다.
또한, N+1일째에는 회사에 없기 때문에, 6, 7일에 있는 상담을 할 수 없다.
퇴사 전에 할 수 있는 상담의 최대 이익은 1일, 4일, 5일에 있는 상담을 하는 것이며, 이때의 이익은 10+20+15=45이다.
상담을 적절히 했을 때, 백준이가 얻을 수 있는 최대 수익을 구하는 프로그램을 작성하시오.
*/
 /* 입력
첫째 줄에 N (1 ≤ N ≤ 15)이 주어진다.

둘째 줄부터 N개의 줄에 Ti와 Pi가 공백으로 구분되어서 주어지며, 1일부터 N일까지 순서대로 주어진다. (1 ≤ Ti ≤ 5, 1 ≤ Pi ≤ 1,000)
 */

 /* 출력
첫째 줄에 백준이가 얻을 수 있는 최대 이익을 출력한다.
 */

/* 예상
만일, N이 뒤로간다면 어떻게 될까? 만약 N이 7이고 7일을 기준으로 생각한다면 7일때 상담을 하기 위해서는 T가 1이여야 할 것이다. 즉, i+T[i]-1 <= N이여야 한다.
저 조건이 성립하는 때에, dp[i] = max(dp[i+1],dp[i+T[i]] + P[i])로 놓을 수 있다. 
조건이 성립하지 않을 때는 dp[i] = dp[i+1]이라 볼 수 있다. N이 --로 감소하기 때문에 i+1로 가능.
*/
/* 결과

*/
#include <iostream>

using namespace std;

int dp[1001];
int T[16];
int P[16];

int main()
{
    int t,n,m;
    cin >> n;
    for(int i=1;i<=n;i++){
        cin >> T[i] >> P[i];
    }
    for(int i=n;i>=1;i--){
        if(i+T[i]-1<=n)
            dp[i] = max(dp[i+1],dp[i+T[i]]+P[i]);
        else
            dp[i] = dp[i+1];
    }
    cout << dp[1];
}
